{"version":3,"sources":["components/CCSPage/CCSPage.js","components/Header/Header.js","components/Contact/Contact.js","components/About/About.js","components/ChademoPage/ChademoPage.js","App.js","reportWebVitals.js","index.js"],"names":["CCSPage","props","theme","responsiveFontSizes","createMuiTheme","typography","h1","fontSize","h2","portReader","portWriter","rawData","role","state","printOutCom","toggleToRefresh","checked","percentage","started","continuousTest","pevProtocol","pevDeviceState","pevHpgState","evseProtocol","evseAmplitude","evseDeviceState","evseHpgState","timeoutFound","queryInterval","initializePEVStrings","pevSendStartCommand","bind","pevSendStopCommand","handleContToggleSwitch","showDetailedProgress","showLinkPanel","setContinuosState","resetLinkMeasurementsList","linkMeasurements","timeoutStartInterval","timeoutStopInterval","gatheringInformationInterval","console","log","data","Uint8Array","this","write","then","res","error","setState","event","clearInterval","pevStrings","found","details","display","warning","blink","timerValue","timeoutStartCounter","setInterval","timeoutStopCounter","OpenReadComPort","text","ds","substring","indexOf","parseInt","hpg","deviceState","hpgState","amp","sCommand","nowFound","length","includes","peerMessageRcvTimestamp","Date","now","evseStr","evseDevice","JSON","parse","protocol","amplitude","e","setTimedoutStartCommand","pevStr","pevDevice","i","measurementValue","split","Number","trim","push","setTimedoutStopCommand","warn","percCalc","Math","round","commandArray","forEach","item","ProcessSplittedCommand","read","ret","connectionLost","TextDecoder","decode","value","ProcessRawData","port","p_Port","open","baudRate","close","readable","getReader","writable","getWriter","setTimeout","ReadValues","map","index","style","color","textShadow","id","className","textAlign","justifyContent","float","height","width","onClick","Grid","container","xs","marginTop","marginLeft","Component","Header","toggle","setCollapsibleElement","ref","to","counter","React","useState","textVal","setTextVal","useEffect","interval","substr","About","ChademoPage","millis","undefined","App","p1","selected","onClickHandler","selectCom1","p2","selectCom2","supported","navigator","serial","getPorts","portList","bSupport","message","slotId","requestPort","AskUserForComport","err","exact","path","prepareComPortSelectButtons","justify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9bbbaf8.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport { createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './CCSPage.css'\r\n\r\n\r\nclass CCSPage extends Component{\r\n\r\n    \r\n    pevSendStartCommand(){\r\n        console.log(\"Send Start Command\")\r\n        const data = new Uint8Array([32]); // space\r\n            this.portWriter.write(data).then(res=>{\r\n                console.error(\"Write ' ' for start... \")\r\n            });\r\n        this.setState({  printOutCom : this.printOutCom,\r\n            toggleToRefresh : this.toggleToRefresh,\r\n            role : this.state.role  ,\r\n            percentage : 0,\r\n            started : true,\r\n            continuousTest : this.state.continuousTest,\r\n            pevProtocol : this.state.pevProtocol,\r\n            pevDeviceState : this.state.pevDeviceState,\r\n            pevHpgState : this.state.pevHpgState,\r\n            evseProtocol : this.state.evseProtocol,\r\n            evseAmplitude : this.state.evseAmplitude,\r\n            evseDeviceState : this.state.evseDeviceState,\r\n            evseHpgState : this.state.evseHpgState,\r\n            timeoutFound : this.state.timeoutFound\r\n        })\r\n    }\r\n    handleContToggleSwitch(event){\r\n\r\n    }\r\n\r\n    pevSendStopCommand(){\r\n        const data = new Uint8Array([100]); // d\r\n        \r\n        this.portWriter.write(data).then(res=>{\r\n            console.error(\"Write 'd' for disconnect... \")\r\n        });\r\n        this.rawData = \"\"\r\n        clearInterval( this.timeoutStartInterval );\r\n        clearInterval( this.timeoutStopInterval );\r\n\r\n        this.initializePEVStrings();\r\n\r\n        this.pevStrings[13].found = true\r\n\r\n        this.setState({  \r\n            printOutCom : this.printOutCom,\r\n            toggleToRefresh : true,\r\n            role : this.role,\r\n            percentage : 0,\r\n            started : false,\r\n            continuousTest : this.state.continuousTest,\r\n            pevProtocol : this.state.pevProtocol,\r\n            pevDeviceState : this.state.pevDeviceState,\r\n            pevHpgState : this.state.pevHpgState,\r\n            evseProtocol : this.state.evseProtocol,\r\n            evseAmplitude : this.state.evseAmplitude,\r\n            evseDeviceState : this.state.evseDeviceState,\r\n            evseHpgState : this.state.evseHpgState,\r\n            timeoutFound : false\r\n        })\r\n    }\r\n    initializePEVStrings(){\r\n        this.pevStrings = [\r\n            {details : \"CM_SLAC_PARAM.REQ sent\",display : \"CM_SLAC_PARAM.REQ sent\",found : false,warning : \"false\",blink : false},\r\n            {details : \"CM_SLAC_PARAM.CNF received\",display : \"CM_SLAC_PARAM.CNF received\",found : false,warning : \"false\",blink : false},\r\n            {details : \"CM_START_ATTEN_CHAR.IND sent\",display : \"CM_START_ATTEN_CHAR.IND sent\",found : false,warning : \"false\",blink : false},\r\n            {details : \"CM_MNBC_SOUND.IND sent\",display : \"CM_MNBC_SOUND.IND sent\",found : false,warning : \"false\",blink : false},\r\n            {details : \"CM_ATTEN_CHAR.IND received\",display : \"CM_ATTEN_CHAR.IND received\",found : false,warning : \"false\",blink : false},\r\n            {details : \"CM_ATTEN_CHAR.RSP sent\",display : \"CM_ATTEN_CHAR.RSP sent\",found : false,warning : \"false\",blink : false},\r\n            {details : \"CM_SLAC_MATCH.REQ sent\",display : \"CM_SLAC_MATCH.REQ sent\",found : false,warning : \"false\",blink : false},\r\n            {details : \"CM_SLAC_MATCH.CNF received\",display : \"CM_SLAC_MATCH.CNF received\",found : false,warning : \"false\",blink : false},\t\r\n            {details : \"Link Measurement:\",display : \"Link Measurement:\",found : false,warning : \"false\",blink : false},\t\r\n            {details : \"Sending IPv6.\",display : \"Sending IPv6.\",found : false,warning : \"false\",blink : false},\t\r\n            {details : \"IPv6 Message is received\",display : \"IPv6 Message is received\",found : false,warning : \"false\",blink : false},\t\r\n            {details : \"TIMEOUT\",display : \"Timeout Occured\",found : false,warning : \"red\",blink : false},\t\r\n            {details : \"TIMEOUT FOR CONNECT\",display : \"Timeout To Reconnect\",found : false,warning : \"red\",blink : false},\t\r\n            {details : \"Waiting for EVSE to be ready!\",display : \"Waiting for EVSE to be ready!\",found : false,warning : \"false\",blink : false},\r\n            {details : \"wrong protocol for pev\",display : \"Wrong protocol is detected on PEV side\",found : false,warning : \"red\",blink : true},\t\r\n            {details : \"wrong protocol for evse\",display : \"Wrong protocol is detected on EVSE side\",found : false,warning : \"red\",blink : true},\r\n            {details : \"System is not completed, Power ON Evse Simulator\",display : \"System is not completed, Power ON Evse Simulator\",found : false,warning : \"red\",blink : true},\t\r\n            {details : \"Power On PEV and Restart the Page\",display : \"Power On PEV and Restart the Page\",found : false,warning : \"red\",blink : false},\t\t\r\n        ]\r\n        \r\n        \r\n    }\r\n\r\n\r\n    setTimedoutStartCommand(timerValue){\r\n        var timeoutStartCounter = timerValue\r\n        console.log(\"setTimedoutStartCommand | begin\")\r\n        this.timeoutStartInterval = setInterval(() => {\r\n            if(timeoutStartCounter-- > 1){\r\n                this.pevStrings[12].display = \"Reconnecting in \"+timeoutStartCounter+\" sec(s).\"  \r\n                this.pevStrings[12].found = true \r\n                this.pevStrings[12].warning = \"green\" \r\n                console.log(\"setTimedoutStartCommand | set text to \",this.pevStrings[12].display)\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : true,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : this.state.pevDeviceState,\r\n                    pevHpgState : this.state.pevHpgState,\r\n                    evseProtocol : this.state.evseProtocol,\r\n                    evseAmplitude : this.state.evseAmplitude,\r\n                    evseDeviceState : this.state.evseDeviceState,\r\n                    evseHpgState : this.state.evseHpgState,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n            }\r\n            else{\r\n                this.pevStrings[12].found = false\r\n                console.log(\"setTimedoutStartCommand | SEND start\")\r\n                this.pevSendStartCommand();\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : true,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : this.state.pevDeviceState,\r\n                    pevHpgState : this.state.pevHpgState,\r\n                    evseProtocol : this.state.evseProtocol,\r\n                    evseAmplitude : this.state.evseAmplitude,\r\n                    evseDeviceState : this.state.evseDeviceState,\r\n                    evseHpgState : this.state.evseHpgState,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n                clearInterval( this.timeoutStartInterval );\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    \r\n\r\n    setTimedoutStopCommand(timerValue){\r\n        var timeoutStopCounter = timerValue\r\n        this.timeoutStopInterval = setInterval(() => {\r\n            if(timeoutStopCounter-- > 0){\r\n                this.pevStrings[11].display = \"Disconnecting in \"+timeoutStopCounter+\" sec(s).\"\r\n                this.pevStrings[11].found = true\r\n                this.pevStrings[11].warning = \"green\"\r\n                console.log(\"setInterval | set text to \",this.pevStrings[11].display)\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : true,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : this.state.pevDeviceState,\r\n                    pevHpgState : this.state.pevHpgState,\r\n                    evseProtocol : this.state.evseProtocol,\r\n                    evseAmplitude : this.state.evseAmplitude,\r\n                    evseDeviceState : this.state.evseDeviceState,\r\n                    evseHpgState : this.state.evseHpgState,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n            }\r\n            else{\r\n                console.log(\"setInterval | SEND Stop\")\r\n                this.pevSendStopCommand();\r\n                this.pevStrings[11].found = false\r\n                //this.setTimedoutStartCommand(25);\r\n                \r\n                clearInterval( this.timeoutStopInterval );\r\n            }\r\n        }, 1000);\r\n    }\r\n  \r\n  \r\n    componentDidMount(){\r\n        this.OpenReadComPort();\r\n    }\r\n\r\n    ExtractDeviceStatus_HpgState(text){\r\n        let ds = text.substring(text.indexOf(\"Device State :\")+15)\r\n        ds = ds.substring(0,ds.indexOf(\" \"))\r\n        ds = parseInt(ds, 10);\r\n\r\n        let hpg = text.substring(text.indexOf(\"hpg_state:\")+10)\r\n        hpg = hpg.substring(0,hpg.indexOf(\" \"))\r\n        let hpgState = parseInt(hpg, 10);\r\n\r\n        return {deviceState : ds, hpgState : hpgState}\r\n    }\r\n\r\n    ExtractDeviceStatus_Amplitude(text){\r\n        let amp = text.substring(text.indexOf(\"Amplitude:\")+10)\r\n        amp = parseInt(amp, 10);\r\n        return amp\r\n    }\r\n\r\n\r\n    ProcessSplittedCommand(sCommand){\r\n        \r\n        let nowFound = false;\r\n        if(sCommand.length > 5){\r\n            console.log(\"sCommand \",sCommand)\r\n            if(sCommand.includes(\"PEER\"))\r\n            {\r\n                if(sCommand.includes(\"}\") )\r\n                {\r\n                    this.pevStrings[16].found = false\r\n                    this.peerMessageRcvTimestamp = Date.now()\r\n\r\n                    let evseStr = sCommand.substring(sCommand.indexOf(\"PEER-\")+5)\r\n                    try {\r\n                        let evseDevice = JSON.parse(evseStr);\r\n                        if(evseDevice.protocol === \"PLC\"){\r\n                            this.pevStrings[15].found = false\r\n                        }else{\r\n                            this.pevStrings[15].found = true\r\n                        }\r\n\r\n                        if(evseDevice.deviceState === 0 && evseDevice.hpgState ===9 ){\r\n                            this.pevStrings[13].found = false\r\n                        }\r\n\r\n\r\n                        this.setState({  \r\n                            printOutCom : this.printOutCom,\r\n                            toggleToRefresh : !this.state.toggleToRefresh,\r\n                            role : this.state.role  ,\r\n                            percentage : this.state.percentage,\r\n                            started : this.state.started,\r\n                            continuousTest : this.state.continuousTest,\r\n                            pevProtocol : this.state.pevProtocol,\r\n                            pevDeviceState : this.state.pevDeviceState,\r\n                            pevHpgState : this.state.pevHpgState,\r\n                            evseProtocol : evseDevice.protocol,\r\n                            evseAmplitude : evseDevice.amplitude,\r\n                            evseDeviceState : evseDevice.deviceState,\r\n                            evseHpgState : evseDevice.hpgState,\r\n                            timeoutFound : this.state.timeoutFound\r\n                        })\r\n\r\n                    } catch (e) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if(sCommand.includes(\"LOG - SLAC - CM_SET_KEY.CNF set.\") )\r\n                {\r\n                    console.log(\">>>>>>>>>TRY CONTINUOS MODE\")\r\n                    nowFound = true\r\n                    if(this.state.continuousTest === true){\r\n                        console.log(\">>>>>>>>>TRY CONTINUOS MODE okkkkkkkkkkkkk\")\r\n                        this.setTimedoutStartCommand(35)\r\n                    }\r\n                }\r\n            }else{\r\n                if(sCommand.includes(\"protocol\")){\r\n\r\n                    let pevStr = sCommand.substring(sCommand.indexOf(\"PEV-\")+4)\r\n                    try {\r\n                        let pevDevice = JSON.parse(pevStr);\r\n                        if(pevDevice.protocol === \"PLC\"){\r\n                            this.pevStrings[14].found = false\r\n                        }else{\r\n                            this.pevStrings[14].found = true\r\n                        }\r\n\r\n                        this.setState({  \r\n                            printOutCom : this.printOutCom,\r\n                            toggleToRefresh : !this.state.toggleToRefresh,\r\n                            role : this.state.role  ,\r\n                            percentage : this.state.percentage,\r\n                            started : this.state.started,\r\n                            continuousTest : this.state.continuousTest,\r\n                            pevProtocol : pevDevice.protocol,\r\n                            pevDeviceState : pevDevice.deviceState,\r\n                            pevHpgState : pevDevice.hpgState,\r\n                            evseProtocol : this.state.evseProtocol,\r\n                            evseAmplitude : this.state.evseAmplitude,\r\n                            evseDeviceState : this.state.evseDeviceState,\r\n                            evseHpgState : this.state.evseHpgState,\r\n                            timeoutFound : this.state.timeoutFound\r\n                        })\r\n\r\n                    } catch (e) {\r\n                    }\r\n\r\n                }\r\n                   \r\n                for(let i=0;i<this.pevStrings.length;i++){\r\n                    if(sCommand.includes(this.pevStrings[i].details) && this.pevStrings[i].found === false){\r\n                        this.pevStrings[i].found = true\r\n                        nowFound = true\r\n                        //console.log(\"ProcessSplittedCommand sCommand i=\", i)\r\n                        if(i === 8)//Link Measurement\r\n                        {\r\n                            let measurementValue = sCommand.split(':')\r\n                            if(measurementValue.length>1){\r\n                                this.pevStrings[8].display = \"Link Measurement: \"+Number(measurementValue[1].trim())+\"ms.\"\r\n                                this.linkMeasurements.push(measurementValue[1].trim())\r\n                            }\r\n                        }\r\n                        else if(i === 10 && this.state.continuousTest === true)// IPv6 Message is received\r\n                        {\r\n                            //setTimeout(()=>{this.pevSendStopCommand()},15000);\r\n                            this.setTimedoutStopCommand(10);\r\n                        }else if(i === 11)// TIMEOUT\r\n                        {\r\n                            console.warn(\"ProcessSplittedCommand  | this.linkMeasurements.push(Timeout) \")\r\n                            this.pevStrings[i].display = sCommand\r\n                            \r\n                            this.linkMeasurements.push(\"Timeout\")\r\n                            if(this.state.continuousTest === true)\r\n                            {\r\n                                this.setTimedoutStopCommand(20);\r\n                            }\r\n                            this.setState({  \r\n                                printOutCom : this.state.printOutCom,\r\n                                toggleToRefresh : !this.state.toggleToRefresh,\r\n                                role : this.state.role  ,\r\n                                percentage : this.state.percentage,\r\n                                started : this.state.started,\r\n                                continuousTest : this.state.continuousTest,\r\n                                pevProtocol : this.state.pevProtocol,\r\n                                pevDeviceState : this.state.pevDeviceState,\r\n                                pevHpgState : this.state.pevHpgState,\r\n                                evseProtocol : this.state.evseProtocol,\r\n                                evseAmplitude : this.state.evseAmplitude,\r\n                                evseDeviceState : this.state.evseDeviceState,\r\n                                evseHpgState : this.state.evseHpgState,\r\n                                timeoutFound : true\r\n                            })\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(nowFound === true){\r\n                    let percCalc = this.state.percentage + ((1 / 11) * 100)\r\n                    if(percCalc >= 90)\r\n                        percCalc = 100;\r\n                        \r\n                    percCalc = Math.round(percCalc)\r\n                    console.warn(\"percCalc : \",percCalc)    \r\n                    this.setState({  \r\n                        printOutCom : this.printOutCom,\r\n                        toggleToRefresh : !this.state.toggleToRefresh,\r\n                        role : this.role  ,\r\n                        percentage : percCalc,\r\n                        started : true,\r\n                        continuousTest : this.state.continuousTest,\r\n                        pevProtocol : this.state.pevProtocol,\r\n                        pevDeviceState : this.state.pevDeviceState,\r\n                        pevHpgState : this.state.pevHpgState,\r\n                        evseProtocol : this.state.evseProtocol,\r\n                        evseAmplitude : this.state.evseAmplitude,\r\n                        evseDeviceState : this.state.evseDeviceState,\r\n                        evseHpgState : this.state.evseHpgState,\r\n                        timeoutFound : this.state.timeoutFound\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n                       \r\n    }\r\n\r\n\r\n\r\n    ProcessRawData(){\r\n        let commandArray = this.rawData.split('*')\r\n        if(commandArray.length>1){\r\n            commandArray.forEach(item=>{\r\n                this.ProcessSplittedCommand(item)\r\n            })\r\n            this.rawData = commandArray[commandArray.length-1]\r\n        }\r\n        \r\n    }\r\n\r\n    async ReadValues(){\r\n\r\n        for(;;){\r\n            try{\r\n                let ret = await this.portReader.read();\r\n                this.connectionLost = false\r\n                this.rawData += new TextDecoder(\"utf-8\").decode(ret.value);\r\n                this.ProcessRawData()\r\n                this.pevStrings[17].found = false;\r\n            }\r\n            catch(err){\r\n                console.error(\"READ VALUES ERROR \" ,err)\r\n                this.connectionLost = true\r\n                this.pevStrings[17].found = true;\r\n\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : this.state.started,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : -1,\r\n                    pevHpgState : -1,\r\n                    evseProtocol : this.state.evseProtocol,\r\n                    evseAmplitude : this.state.evseAmplitude,\r\n                    evseDeviceState : -1,\r\n                    evseHpgState : -1,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n\r\n                break\r\n            }\r\n        }\r\n\r\n/*\r\n        this.portReader.read().then(res=>{\r\n            this.rawData += new TextDecoder(\"utf-8\").decode(res.value);\r\n            return this.rawData;\r\n            // setTimeout(this.ProcessRawData(),0);\r\n            // this.ReadValues();\r\n        }).then(val=>{\r\n            this.ProcessRawData()\r\n            this.ReadValues()\r\n        })\r\n        */\r\n    }\r\n\r\n    \r\n    async OpenReadComPort(){\r\n        console.log(\"OpenReadComPort | begin\")\r\n\r\n        console.log(\"Port..\",this.props.port)\r\n        const p_Port = this.props.port\r\n        try{\r\n            await p_Port.port.open({ baudRate: 115200});\r\n        }catch(e){\r\n            p_Port.port.close();\r\n            await p_Port.port.open({ baudRate: 115200});\r\n        }\r\n         \r\n        this.portReader = p_Port.port.readable.getReader();\r\n\r\n        this.portWriter = p_Port.port.writable.getWriter();\r\n        \r\n        \r\n\r\n        setTimeout(()=>{\r\n            this.ReadValues()\r\n        },0)\r\n\r\n        this.gatheringInformationInterval = setInterval(() => { \r\n            \r\n            if(this.connectionLost)\r\n                return\r\n\r\n            const data = new Uint8Array([114]); // r\r\n            this.portWriter.write(data).then(res=>{\r\n                //console.log(\"Send Information Command \",res)\r\n            });\r\n\r\n            const millis = Date.now() - this.peerMessageRcvTimestamp\r\n            if(millis > 6000 || (this.state.evseDeviceState === -1 && this.state.evseHpgState === -1)){\r\n                console.error(\"Connection lost to EVSE\")\r\n                this.initializePEVStrings()\r\n                this.pevStrings[16].found = true;\r\n\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : this.state.started,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : this.state.pevDeviceState,\r\n                    pevHpgState : this.state.pevHpgState,\r\n                    evseProtocol : this.state.evseProtocol,\r\n                    evseAmplitude : this.state.evseAmplitude,\r\n                    evseDeviceState : -1,\r\n                    evseHpgState : -1,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n\r\n            }\r\n         },2000);\r\n        \r\n       \r\n        console.log(\"OpenReadComPort | end\")\r\n    }\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        \r\n        this.theme = responsiveFontSizes(createMuiTheme(\r\n            {typography: {\r\n                h1: {\r\n                    fontSize: 200,\r\n                },\r\n                h2: {\r\n                    fontSize: 15,\r\n                },\r\n            },}\r\n        ));\r\n        this.portReader = {}\r\n        this.portWriter = {}\r\n        this.rawData = \"\"\r\n        this.role = \"\"\r\n        this.state = {\r\n            printOutCom : \"\",\r\n            toggleToRefresh : false,\r\n            role : \"PEV\",\r\n            checked : false,  \r\n            percentage : 0,\r\n            started : false,\r\n            continuousTest : false,\r\n            pevProtocol : \"\",\r\n            pevDeviceState : -1,\r\n            pevHpgState : -1,\r\n            evseProtocol : \"\",\r\n            evseAmplitude : 0,\r\n            evseDeviceState : -1,\r\n            evseHpgState : -1,\r\n            timeoutFound : false\r\n          };\r\n\r\n        this.queryInterval = {}\r\n        this.initializePEVStrings()\r\n        this.pevSendStartCommand = this.pevSendStartCommand.bind(this)\r\n        this.pevSendStopCommand = this.pevSendStopCommand.bind(this)\r\n        this.handleContToggleSwitch = this.handleContToggleSwitch.bind(this)\r\n        this.showDetailedProgress = this.showDetailedProgress.bind(this)\r\n        this.showLinkPanel = this.showLinkPanel.bind(this)\r\n        this.setContinuosState = this.setContinuosState.bind(this)\r\n        this.resetLinkMeasurementsList = this.resetLinkMeasurementsList.bind(this)\r\n        this.linkMeasurements = []\r\n        \r\n        this.timeoutStartInterval = {}\r\n        this.timeoutStopInterval = {}\r\n        this.gatheringInformationInterval = {}\r\n\r\n    }\r\n\r\n    resetLinkMeasurementsList(){\r\n        this.linkMeasurements = []\r\n        this.setState({  \r\n            printOutCom : this.printOutCom,\r\n            toggleToRefresh : !this.state.toggleToRefresh,\r\n            role : this.state.role  ,\r\n            percentage : this.state.percentage,\r\n            started : this.state.started,\r\n            continuousTest : this.state.continuousTest,\r\n            pevProtocol : this.state.pevProtocol,\r\n            pevDeviceState : this.state.pevDeviceState,\r\n            pevHpgState : this.state.pevHpgState,\r\n            evseProtocol : this.state.evseProtocol,\r\n            evseAmplitude : this.state.evseAmplitude,\r\n            evseDeviceState : this.state.evseDeviceState,\r\n            evseHpgState : this.state.evseHpgState,\r\n            timeoutFound : this.state.timeoutFound\r\n        })\r\n    }\r\n  \r\n    showDetailedProgress(){\r\n        if(this.pevStrings != null && this.pevStrings.length > 0)\r\n        {\r\n            \r\n            return this.pevStrings.map((value,index)=>{\r\n                if(value.found)\r\n                {\r\n                    if(value.warning === \"false\"){\r\n                        if(index === 13){\r\n                            return(\r\n                                <p key={\"detailed_\"+index}>\r\n                                    {value.display}\r\n                                </p>\r\n                            );\r\n                        }else{\r\n                            return(\r\n                                <p key={\"detailed_\"+index}>\r\n                                    {value.display}{index<15 ? \".......................................OK\" : \"\"}\r\n                                </p>\r\n                            );\r\n                        }\r\n                            \r\n                    }\r\n                    else if(value.warning === \"green\"){\r\n                        return(\r\n                            <p key={\"detailed_\"+index} style={{color:'#00cc00',\r\n                                                               textShadow: '0 0 0.4em #00cc00'\r\n                                                               }} id='greenTextFeature'>\r\n                                {value.display}\r\n                            </p>\r\n                        );\r\n                    }\r\n                    else{\r\n                        if(value.blink){\r\n                            return(\r\n                                <p key={\"detailed_\"+index} style={{color:'#c20b0b',\r\n                                                                   textShadow: '0 0 0.4em #c20b0b'\r\n                                                                   }} id='warningTextFeature'>\r\n                                    {value.display}\r\n                                </p>\r\n                            );\r\n                        }else{\r\n                            return(\r\n                                <p key={\"detailed_\"+index} style={{color:'#c20b0b',\r\n                                                                   textShadow: '0 0 0.4em #c20b0b'\r\n                                                                   }}>\r\n                                    {value.display}\r\n                                </p>\r\n                            );\r\n                        }   \r\n                        \r\n                    }\r\n                }else{\r\n                    return null;\r\n                }\r\n            })\r\n              \r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n    showLinkPanel(){\r\n        if(this.linkMeasurements != null && this.linkMeasurements.length > 0)\r\n        { \r\n            return(\r\n                <div  id='linkpanelid1'>\r\n                <div className=\"ui panel\">\r\n                    <div className=\"ui panel content\">\r\n                    {\r\n                        this.linkMeasurements.map((value,index)=>{\r\n                            if(value === \"Timeout\")\r\n                            {\r\n                                return(\r\n                                    <div key={'mydivkey'+index}>\r\n                                    <strong key={'mykey'+index} style={{color:'#c20b0b',\r\n                                                               textShadow: '0 0 0.4em #c20b0b'\r\n                                                               }} >{value}</strong><br /> \r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <div key={'mydivkey'+index}>\r\n                                    <strong key={'mykey'+index}>Link Time</strong> {value} ms.<br /> \r\n                                    </div>\r\n                                );\r\n                            }\r\n                            \r\n                        })\r\n                    }    \r\n                    <div style = {{ textAlign:'right' , justifyContent: 'right' , float: 'right' , height: '50px', width: '50px' }}> <div  className='linkMeasurementsReset ' onClick={this.resetLinkMeasurementsList} /> </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    setContinuosState(){\r\n        this.setState({  printOutCom : this.printOutCom,\r\n            toggleToRefresh : this.state.toggleToRefresh,\r\n            role : this.state.role  ,\r\n            percentage : this.state.percentage,\r\n            started : this.state.started,\r\n            continuousTest : !this.state.continuousTest,\r\n            pevProtocol : this.state.pevProtocol,\r\n            pevDeviceState : this.state.pevDeviceState,\r\n            pevHpgState : this.state.pevHpgState,\r\n            evseProtocol : this.state.evseProtocol,\r\n            evseDeviceState : this.state.evseDeviceState,\r\n            evseAmplitude : this.state.evseAmplitude,\r\n            evseHpgState : this.state.evseHpgState,\r\n            timeoutFound : this.state.timeoutFound\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        console.log(\"Continuos Mode\",this.state.continuousTest,\"PEV \",this.state.pevProtocol, \" --- \",this.state.pevDeviceState,this.state.pevHpgState,\" EVSE \",this.state.evseProtocol,\" --- \",this.state.evseDeviceState,this.state.evseHpgState,\"Amp\",this.state.evseAmplitude,\"timeoutFound \",this.state.timeoutFound)\r\n        if(this.state.pevProtocol === \"PLC\" && this.state.evseProtocol === \"PLC\"){\r\n            return (\r\n                <div>\r\n                    <h1 className=\"cs\">FoE-Charger</h1>\r\n                        <div className=\"circle cir\"><p className=\"c\">F</p>\r\n                        <div className=\"circle one\"></div>\r\n                        <div className=\"circle two\">\r\n                            <div className=\"circle three\">\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n    \r\n                        <div className=\"wrapper\">\r\n                        <div className=\"bar left\"></div>\r\n                        <div className=\"bar top\"></div>\r\n                        <div className=\"bar right\"></div>\r\n                        <div className=\"bar bottom\"></div>\r\n                        <br/>\r\n                        <Grid container>\r\n                        <Grid item xs={2}>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                        {(this.state.pevDeviceState === 0 &&  this.state.evseDeviceState === 0 && this.state.pevHpgState === 9 &&  (this.state.evseHpgState === 9 || this.state.evseHpgState === 8)&& this.state.evseAmplitude === 1)? <div className='Action_button_1' onClick={this.pevSendStartCommand}/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                        {((this.state.pevDeviceState === 11 &&  this.state.evseDeviceState === 10 && this.state.pevHpgState === 11 &&  this.state.evseHpgState === 11) || this.state.timeoutFound ) ? <div className='Action_button_2' onClick={this.pevSendStopCommand}/> : null}\r\n                        \r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={2} >\r\n                            <div style={{marginTop: '20px'}}>\r\n                                <span className='continuousText'>Continuous Test</span>\r\n                                {\r\n                                    this.state.continuousTest ? \r\n                                        <div style={{marginLeft: '30px'}} className='continuousSelectionSelected' onClick={this.setContinuosState} />: \r\n                                        <div style={{marginLeft: '30px'}} className='continuousSelectionUnselected' onClick={this.setContinuosState} /> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                        </Grid>\r\n                        <Grid item xs={2} >\r\n                            <div className='parentWheel'>\r\n                                <div className='Outer_wheel'/>\r\n                                <div className='Wheel_Base'/>\r\n                                {this.state.started ? <div className='Ineer_wheel Ineer_wheel_Animation'/> : <div className='Ineer_wheel'/>}\r\n                                <div className='Percentage_wheel'><span id='percentage'>{this.state.percentage}</span>%</div>\r\n                            </div>\r\n                        \r\n                        </Grid>\r\n                        </Grid>\r\n                        \r\n                        \r\n                        <Grid container>\r\n                        <Grid item xs={6}>\r\n                            {this.showDetailedProgress()}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        {this.showLinkPanel()}\r\n                        </Grid>\r\n                        </Grid>                \r\n                        \r\n                        </div>\r\n                </div>\r\n                );   \r\n        }else{\r\n            return (\r\n                <div>\r\n                    <h1 className=\"cs\">FoE-Charger</h1>\r\n                        <div className=\"circle cir\"><p className=\"c\">F</p>\r\n                        <div className=\"circle one\"></div>\r\n                        <div className=\"circle two\">\r\n                            <div className=\"circle three\">\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n    \r\n                        <div className=\"wrapper\">\r\n                        <div className=\"bar left\"></div>\r\n                        <div className=\"bar top\"></div>\r\n                        <div className=\"bar right\"></div>\r\n                        <div className=\"bar bottom\"></div>\r\n                        <br/>\r\n                        <br/><br/><br/>\r\n                        <Grid container>\r\n                        <Grid item xs={6}>\r\n                            {this.showDetailedProgress()}\r\n                        </Grid>\r\n                        </Grid>                \r\n                        </div>\r\n                </div>\r\n                );\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n<ol className=\"timeline\">\r\n                        <li>list item</li>\r\n                        <li>list item</li>\r\n                    </ol>\r\n*/\r\n\r\n}\r\nexport default CCSPage","import React from \"react\";\r\nimport SlideToggle from \"react-slide-toggle\";\r\nimport './Header.css'\r\n\r\nimport { Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"bodyWrapper\">\r\n    <header>\r\n      <div className=\"signBlock\">\r\n        <div className=\"topCover\"></div>\r\n          <div className=\"headerContent\">\r\n            <div className=\"headerLinks\">\r\n            <h1>PONTIS EMC</h1>\r\n                <div className=\"signLinks\">\r\n                <h3>Test Web Interface</h3>\r\n                </div>       \r\n            </div>\r\n          </div>\r\n            <div className=\"boxEdges1\">\r\n              <div className=\"boxEdges2\">\r\n                <div className=\"slider\"></div>\r\n                <div className=\"headerLine\"></div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    <SlideToggle>\r\n    {({ toggle, setCollapsibleElement }) => (\r\n      <div className=\"my-collapsible\">\r\n          <div id=\"navButton\" className=\"open\" onClick={toggle}>- Menu -   \r\n          <div className=\"bar left\"></div>\r\n          <div className=\"bar top\"></div>\r\n          <div className=\"bar right\"></div>\r\n          <div className=\"bar bottom\"></div>\r\n        </div>\r\n        <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n          <div className=\"my-collapsible__content-inner\">\r\n          <div className='navContent'>\r\n            <Link to=\"ccs\">CCS</Link> | \r\n            <Link to=\"chademo\">ChadeMo</Link> | \r\n            <Link to=\"about\">About</Link> | \r\n            <Link to=\"contact\">Contact</Link>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </SlideToggle>\r\n    <body-container>\r\n    </body-container>\r\n    <footer>\r\n    </footer>\r\n  </div>\r\n  );\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport './Contact.css'\r\n\r\nvar counter = 0\r\nvar text = \"Ex aliquip nisi velit eu quis Lorem ullamco labore irure veniam. Excepteur non velit nisi qui sint ad excepteur. Do sit proident occaecat ea ullamco nostrud exercitation incididunt qui cupidatat consectetur. Id veniam cillum dolore sunt duis minim cupidatat eu.Sunt consequat excepteur tempor do elit non cillum ex incididunt. Dolor qui incididunt qui cupidatat laborum officia duis pariatur occaecat cupidatat aliqua Lorem laborum. Commodo dolor ad eu anim nostrud veniam sunt velit. Do amet sit ea tempor sint adipisicing magna exercitation commodo laboris veniam commodo. Laboris nulla ipsum in incididunt non incididunt exercitation proident qui occaecat cupidatat ipsum aliqua aliqua. Pariatur eu Lorem nostrud exercitation nulla ea minim laborum amet cupidatat officia adipisicing. Fugiat dolore est qui voluptate incididunt aute fugiat non laborum.\"\r\n\r\nexport default function Header() {\r\n    const [textVal,setTextVal] = React.useState(\"\");\r\n\r\n   \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        counter++;\r\n        if(counter<text.length){\r\n          setTextVal(text.substr(0,counter))\r\n        }\r\n      }, 50);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    return (\r\n      <div>\r\n          {textVal}<span className='blinker'>&#32;</span>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useEffect } from 'react';\r\nimport './About.css'\r\n\r\nvar counter = 0\r\nvar text = \"Ipsum esse anim dolor in aliqua. Consectetur ad nostrud nisi ea dolor pariatur. Irure fugiat ipsum adipisicing incididunt eu sint nulla. Nisi fugiat magna eiusmod nostrud consequat fugiat velit labore duis occaecat Lorem aliquip. Duis aliqua id do cillum occaecat occaecat aliquip deserunt. Cillum incididunt magna excepteur est quis proident in aute amet est in mollit.\"\r\n\r\nexport default function About() {\r\n    const [textVal,setTextVal] = React.useState(\"\");\r\n\r\n   \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        counter++;\r\n        if(counter<text.length){\r\n          setTextVal(text.substr(0,counter))\r\n        }\r\n      }, 50);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    return (\r\n      <div>\r\n          {textVal}<span className='blinker'>&#32;</span>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React,{Component} from 'react'\r\nimport { createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './ChademoPage.css'\r\n\r\n\r\nclass ChademoPage extends Component{\r\n\r\n    \r\n    pevSendStartCommand(){\r\n        this.initializePEVStrings()\r\n        console.log(\"Send Start Command\")\r\n        const data = new Uint8Array([32]); // space\r\n            this.portWriter.write(data).then(res=>{\r\n                console.error(\"Write ' ' for start... \")\r\n            });\r\n        this.setState({  printOutCom : this.printOutCom,\r\n            toggleToRefresh : this.toggleToRefresh,\r\n            role : this.state.role  ,\r\n            percentage : 0,\r\n            started : true,\r\n            continuousTest : this.state.continuousTest,\r\n            pevProtocol : this.state.pevProtocol,\r\n            pevDeviceState : this.state.pevDeviceState,\r\n            evseProtocol : this.state.evseProtocol,\r\n            evseDeviceState : this.state.evseDeviceState,\r\n            timeoutFound : this.state.timeoutFound\r\n        })\r\n    }\r\n    handleContToggleSwitch(event){\r\n\r\n    }\r\n\r\n    \r\n    initializePEVStrings(){\r\n        this.pevStrings = [\r\n            {details : \"Event | Detected | t0\",display : \"EVSE | Detected | t0\",found : false,warning : \"false\"},\r\n            {details : \"Event | Set | t1\",display : \"EVSE | Set | t1\",found : false,warning : \"false\"},\r\n            {details : \"Event | Detected | t1\",display : \"PEV | Detected | t1\",found : false,warning : \"false\"},\r\n            {details : \"Event | Set | t2\",display : \"PEV | Set | t2\",found : false,warning : \"false\"},\r\n            {details : \"Event | Detected | t2\",display : \" EVSE | Detected | t2\",found : false,warning : \"false\"},\r\n            {details : \"Event | Set | t3\",display : \"EVSE | Set | t3\",found : false,warning : \"false\"},\r\n            {details : \"Event | Detected | t3\",display : \"PEV | Detected | t3\",found : false,warning : \"false\"},\r\n            {details : \"Event | Message Exchange | Sending\",display : \"CAN Message | Sending\",found : false,warning : \"false\"},\r\n            {details : \"Event | Message Exchange | Received\",display : \"CAN Message | Received\",found : false,warning : \"false\"},\r\n            {details : \"Event | Set | t4\",display : \"PEV | Set | t4\",found : false,warning : \"false\"},\t\r\n            {details : \"Event | Detected | t4\",display : \"EVSE | Detected | t4\",found : false,warning : \"false\"},\t\r\n            {details : \"Event | Set | t5\",display : \"EVSE | Set | t5\",found : false,warning : \"false\"},\t\r\n            {details : \"Event | Set | t6\",display : \"EVSE | Set | t6\",found : false,warning : \"false\"},\t\r\n            {details : \"Event | Set | t7\",display : \"EVSE | Set | t7\",found : false,warning : \"false\"},\r\n            {details : \"Event | Set | t7\",display : \"EVSE | Set | t7\",found : false,warning : \"false\"},\r\n            {details : \"wrong protocol for pev\",display : \"Wrong protocol is detected on PEV side\",found : false,warning : \"red\"},\t\r\n            {details : \"wrong protocol for evse\",display : \"Wrong protocol is detected on EVSE side\",found : false,warning : \"red\"},\r\n            {details : \"Timeout\",display : \"Timeout\",found : false,warning : \"red\"},\r\n            {details : \"System is not completed, Power ON Evse Simulator\",display : \"System is not completed, Power ON Evse Simulator\",found : false,warning : \"red\",blink : true},\t\r\n            {details : \"Power On PEV and Restart the Page\",display : \"Power On PEV and Restart the Page\",found : false,warning : \"red\",blink : false},\t\t\r\n        ]\r\n        \r\n        \r\n    }\r\n\r\n\r\n    setTimedoutStartCommand(timerValue){\r\n        var timeoutStartCounter = timerValue\r\n        console.log(\"setTimedoutStartCommand | begin\")\r\n        this.timeoutStartInterval = setInterval(() => {\r\n            if(timeoutStartCounter-- > 1){\r\n                this.pevStrings[14].display = \"Reconnecting in \"+timeoutStartCounter+\" sec(s).\"  \r\n                this.pevStrings[14].found = true \r\n                this.pevStrings[14].warning = \"green\" \r\n                console.log(\"setTimedoutStartCommand | set text to \",this.pevStrings[12].display)\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : true,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : this.state.pevDeviceState,\r\n                    evseProtocol : this.state.evseProtocol,\r\n                    evseDeviceState : this.state.evseDeviceState,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n            }\r\n            else{\r\n                this.pevStrings[14].found = false\r\n                console.log(\"setTimedoutStartCommand | SEND start\")\r\n                this.pevSendStartCommand();\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : true,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : this.state.pevDeviceState,\r\n                    evseProtocol : this.state.evseProtocol,\r\n                    evseDeviceState : this.state.evseDeviceState,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n                clearInterval( this.timeoutStartInterval );\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    ExtractDeviceStatus(text){\r\n        let ds = text.substring(text.indexOf(\"Device State :\")+15)\r\n        ds = parseInt(ds, 10);\r\n\r\n        return {deviceState : ds}\r\n    }    \r\n  \r\n  \r\n    componentDidMount(){\r\n        this.OpenReadComPort();\r\n    }\r\n\r\n    ProcessSplittedCommand(sCommand){\r\n        \r\n        let nowFound = false;\r\n\r\n        if(sCommand.length > 5){\r\n            console.log(\"ProcessSplittedCommand \" ,sCommand)\r\n            if(sCommand.includes(\"PEER\") && sCommand.includes(\"}\"))\r\n            {\r\n                let evseStr = sCommand.substring(sCommand.indexOf(\"PEER-\")+5)\r\n                this.peerMessageRcvTimestamp = Date.now()\r\n                this.pevStrings[18].found = false\r\n\r\n                try {\r\n                    let evseDevice = JSON.parse(evseStr);\r\n                   \r\n                    if(evseDevice.protocol === \"PLC\"){\r\n                        this.pevStrings[16].found = true\r\n                    }else{\r\n                        this.pevStrings[16].found = false\r\n                    }\r\n                    this.setState({  \r\n                        printOutCom : this.printOutCom,\r\n                        toggleToRefresh : !this.state.toggleToRefresh,\r\n                        role : this.state.role  ,\r\n                        percentage : this.state.percentage,\r\n                        started : this.state.started,\r\n                        continuousTest : this.state.continuousTest,\r\n                        pevProtocol : this.state.pevProtocol,\r\n                        pevDeviceState : this.state.pevDeviceState,\r\n                        evseProtocol : evseDevice.protocol,\r\n                        evseDeviceState : evseDevice.deviceState,\r\n                        timeoutFound : this.state.timeoutFound\r\n                    })\r\n                }catch (e) {\r\n                    return false;\r\n                }\r\n            }else{\r\n                if(sCommand.includes(\"protocol\") && sCommand.includes(\"}\")){\r\n                    \r\n                    let pevStr = sCommand.substring(sCommand.indexOf(\"PEV-\")+4)\r\n                    try {\r\n                        let pevDevice = JSON.parse(pevStr);\r\n                        if(pevDevice.protocol === \"PLC\"){\r\n                            this.pevStrings[15].found = true\r\n                        }else{\r\n                            this.pevStrings[15].found = false\r\n                        }\r\n                        this.setState({  \r\n                            printOutCom : this.printOutCom,\r\n                            toggleToRefresh : !this.state.toggleToRefresh,\r\n                            role : this.state.role  ,\r\n                            percentage : this.state.percentage,\r\n                            started : this.state.started,\r\n                            continuousTest : this.state.continuousTest,\r\n                            pevProtocol : pevDevice.protocol,\r\n                            pevDeviceState : pevDevice.deviceState,\r\n                            evseProtocol : this.state.evseProtocol,\r\n                            evseDeviceState : this.state.evseDeviceState,\r\n                            timeoutFound : this.state.timeoutFound\r\n                        })\r\n                    }catch (e) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for(let i=0;i<this.pevStrings.length;i++){\r\n                    if(sCommand.includes(this.pevStrings[i].details) && this.pevStrings[i].found === false){\r\n                        this.pevStrings[i].found = true\r\n                        nowFound = true\r\n                        if(i === 13)//Event | Set | t7\r\n                        {\r\n                            if(this.state.continuousTest === true)\r\n                            {\r\n                                this.setTimedoutStartCommand(5)\r\n                            }\r\n                        }\r\n                        if(i === 17)\r\n                        {\r\n                            this.pevStrings[i].display = sCommand.substring(sCommand.indexOf(\"Timeout\"))      \r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(nowFound === true){\r\n                    console.warn(\"OKKKKKKKK\")\r\n                    let percCalc = this.state.percentage + ((1 / 14) * 100)\r\n                    if(percCalc >= 90)\r\n                        percCalc = 100;\r\n                    \r\n                    percCalc = Math.round(percCalc)\r\n\r\n                    this.setState({  \r\n                        printOutCom : this.printOutCom,\r\n                        toggleToRefresh : !this.state.toggleToRefresh,\r\n                        role : this.role  ,\r\n                        percentage : percCalc,\r\n                        started : true,\r\n                        continuousTest : this.state.continuousTest,\r\n                        pevProtocol : this.state.pevProtocol,\r\n                        pevDeviceState : this.state.pevDeviceState,\r\n                        evseProtocol : this.state.evseProtocol,\r\n                        evseDeviceState : this.state.evseDeviceState,\r\n                        timeoutFound : this.state.timeoutFound\r\n                    })\r\n                }\r\n            }  \r\n        }\r\n    }\r\n\r\n\r\n\r\n    ProcessRawData(){\r\n        let commandArray = this.rawData.split('*')\r\n        if(commandArray.length>1){\r\n            commandArray.forEach(item=>{\r\n                this.ProcessSplittedCommand(item)\r\n            })\r\n            this.rawData = commandArray[commandArray.length-1]\r\n        }\r\n        \r\n    }\r\n/*\r\n    ReadValues(){\r\n        this.portReader.read().then(res=>{\r\n            this.rawData += new TextDecoder(\"utf-8\").decode(res.value);\r\n            return this.rawData;\r\n            // setTimeout(this.ProcessRawData(),0);\r\n            // this.ReadValues();\r\n        }).then(val=>{\r\n            this.ProcessRawData()\r\n            this.ReadValues()\r\n        });\r\n    }\r\n*/\r\nasync ReadValues(){\r\n\r\n    for(;;){\r\n        try{\r\n            let ret = await this.portReader.read();\r\n            this.connectionLost = false\r\n            this.rawData += new TextDecoder(\"utf-8\").decode(ret.value);\r\n            this.ProcessRawData()\r\n            this.pevStrings[19].found = false;\r\n        }\r\n        catch(err){\r\n            console.error(\"READ VALUES ERROR \" ,err)\r\n            this.connectionLost = true\r\n            this.pevStrings[19].found = true;\r\n\r\n            this.setState({  \r\n                printOutCom : this.printOutCom,\r\n                toggleToRefresh : !this.state.toggleToRefresh,\r\n                role : this.state.role  ,\r\n                percentage : this.state.percentage,\r\n                started : this.state.started,\r\n                continuousTest : this.state.continuousTest,\r\n                pevProtocol : this.state.pevProtocol,\r\n                pevDeviceState : -1,\r\n                evseProtocol : this.state.evseProtocol,\r\n                evseDeviceState : -1,\r\n                timeoutFound : this.state.timeoutFound\r\n            })\r\n\r\n            break\r\n        }\r\n    }\r\n}\r\n    \r\n    async OpenReadComPort(){\r\n        console.log(\"OpenReadComPort | begin\")\r\n\r\n        console.log(\"Port..\",this.props.port)\r\n        const p_Port = this.props.port\r\n        try{\r\n            await p_Port.port.open({ baudRate: 115200});\r\n        }catch(e){\r\n            p_Port.port.close();\r\n            await p_Port.port.open({ baudRate: 115200});\r\n        }\r\n         \r\n        this.portReader = p_Port.port.readable.getReader();\r\n\r\n        this.portWriter = p_Port.port.writable.getWriter();\r\n        \r\n\r\n        setTimeout(()=>{\r\n            this.ReadValues()\r\n        },0)\r\n\r\n        this.gatheringInformationInterval = setInterval(() => { \r\n            if(this.connectionLost)\r\n                return\r\n\r\n            const data = new Uint8Array([114]); // r\r\n            this.portWriter.write(data).then(res=>{\r\n                //console.log(\"Send Information Command \",res)\r\n            });\r\n            const millis = Date.now() - this.peerMessageRcvTimestamp\r\n            console.log(\"peerMessageRcvTimestamp >>> millis \",millis)\r\n            if(this.peerMessageRcvTimestamp === undefined || millis > 6000 || (this.state.evseDeviceState === -1 && this.state.evseHpgState === -1)){\r\n                console.log(\"peerMessageRcvTimestamp >>> 1\")\r\n                console.error(\"Connection lost to EVSE\")\r\n                this.initializePEVStrings()\r\n                this.pevStrings[18].found = true;\r\n\r\n                this.setState({  \r\n                    printOutCom : this.printOutCom,\r\n                    toggleToRefresh : !this.state.toggleToRefresh,\r\n                    role : this.state.role  ,\r\n                    percentage : this.state.percentage,\r\n                    started : this.state.started,\r\n                    continuousTest : this.state.continuousTest,\r\n                    pevProtocol : this.state.pevProtocol,\r\n                    pevDeviceState : this.state.pevDeviceState,\r\n                    evseProtocol :-1,\r\n                    evseDeviceState : -1,\r\n                    timeoutFound : this.state.timeoutFound\r\n                })\r\n\r\n            }\r\n         },2000);\r\n        \r\n        \r\n       \r\n        console.log(\"OpenReadComPort | end\")\r\n    }\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        \r\n        this.theme = responsiveFontSizes(createMuiTheme(\r\n            {typography: {\r\n                h1: {\r\n                    fontSize: 200,\r\n                },\r\n                h2: {\r\n                    fontSize: 15,\r\n                },\r\n            },}\r\n        ));\r\n        this.portReader = {}\r\n        this.portWriter = {}\r\n        this.rawData = \"\"\r\n        this.role = \"\"\r\n        this.state = {\r\n            printOutCom : \"\",\r\n            toggleToRefresh : false,\r\n            role : \"PEV\",\r\n            checked : false,  \r\n            percentage : 0,\r\n            started : false,\r\n            continuousTest : false,\r\n            pevProtocol : \"\",\r\n            pevDeviceState : -1,\r\n            evseProtocol : \"\",\r\n            evseDeviceState : -1,\r\n            timeoutFound : false\r\n          };\r\n\r\n        this.queryInterval = {}\r\n        this.initializePEVStrings()\r\n        this.pevSendStartCommand = this.pevSendStartCommand.bind(this)\r\n        this.handleContToggleSwitch = this.handleContToggleSwitch.bind(this)\r\n        this.showDetailedProgress = this.showDetailedProgress.bind(this)\r\n        this.showLinkPanel = this.showLinkPanel.bind(this)\r\n        this.setContinuosState = this.setContinuosState.bind(this)\r\n        this.resetLinkMeasurementsList = this.resetLinkMeasurementsList.bind(this)\r\n        this.linkMeasurements = []\r\n        \r\n        this.timeoutStartInterval = {}\r\n        \r\n        this.gatheringInformationInterval = {}\r\n    }\r\n\r\n    resetLinkMeasurementsList(){\r\n        this.linkMeasurements = []\r\n        this.setState({  \r\n            printOutCom : this.printOutCom,\r\n            toggleToRefresh : !this.state.toggleToRefresh,\r\n            role : this.state.role  ,\r\n            percentage : this.state.percentage,\r\n            started : this.state.started,\r\n            continuousTest : this.state.continuousTest,\r\n            pevProtocol : this.state.pevProtocol,\r\n            pevDeviceState : this.state.pevDeviceState,\r\n            evseProtocol : this.state.evseProtocol,\r\n            evseDeviceState : this.state.evseDeviceState,\r\n            timeoutFound : this.state.timeoutFound\r\n        })\r\n    }\r\n  \r\n    showDetailedProgress(){\r\n        if(this.pevStrings != null && this.pevStrings.length > 0)\r\n        {\r\n            \r\n            return this.pevStrings.map((value,index)=>{\r\n                if(value.found)\r\n                {\r\n                    if(value.warning === \"false\"){\r\n                        return(\r\n                            <p key={\"detailed_\"+index}>\r\n                                {value.display}{index<15 ? \"................OK\" : \"\"}\r\n                            </p>\r\n                        );\r\n                    }\r\n                    else if(value.warning === \"green\"){\r\n                        return(\r\n                            <p key={\"detailed_\"+index} style={{color:'#00cc00',\r\n                                                               textShadow: '0 0 0.4em #00cc00'\r\n                                                               }} id='greenTextFeature'>\r\n                                {value.display}\r\n                            </p>\r\n                        );\r\n                    }\r\n                    else{\r\n                        return(\r\n                            <p key={\"detailed_\"+index} style={{color:'#c20b0b',\r\n                                                               textShadow: '0 0 0.4em #c20b0b'\r\n                                                               }} id='warningTextFeature'>\r\n                                {value.display}\r\n                            </p>\r\n                        );\r\n                    }\r\n                }else{\r\n                    return null;\r\n                }\r\n            })\r\n              \r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n    showLinkPanel(){\r\n        console.log(\"Show Link Panel\",this.linkMeasurements.length)\r\n        if(this.linkMeasurements != null && this.linkMeasurements.length > 0)\r\n        { \r\n            return(\r\n                <div  id='linkpanelid1'>\r\n                <div className=\"ui panel\">\r\n                    <div className=\"ui panel content\">\r\n                    {\r\n                        this.linkMeasurements.map((value,index)=>{\r\n                            if(value === \"Timeout\")\r\n                            {\r\n                                return(\r\n                                    <div key={'mydivkey'+index}>\r\n                                    <strong key={'mykey'+index} style={{color:'#c20b0b',\r\n                                                               textShadow: '0 0 0.4em #c20b0b'\r\n                                                               }} >{value}</strong><br /> \r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <div key={'mydivkey'+index}>\r\n                                    <strong key={'mykey'+index}>Link Time</strong> {value} ms.<br /> \r\n                                    </div>\r\n                                );\r\n                            }\r\n                            \r\n                        })\r\n                    }    \r\n                    <div style = {{ textAlign:'right' , justifyContent: 'right' , float: 'right' , height: '50px', width: '50px' }}> <div  className='linkMeasurementsReset ' onClick={this.resetLinkMeasurementsList} /> </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    setContinuosState(){\r\n        this.setState({  printOutCom : this.printOutCom,\r\n            toggleToRefresh : this.state.toggleToRefresh,\r\n            role : this.state.role  ,\r\n            percentage : this.state.percentage,\r\n            started : this.state.started,\r\n            continuousTest : !this.state.continuousTest,\r\n            pevProtocol : this.state.pevProtocol,\r\n            pevDeviceState : this.state.pevDeviceState,\r\n            evseProtocol : this.state.evseProtocol,\r\n            evseDeviceState : this.state.evseDeviceState,\r\n            timeoutFound : this.state.timeoutFound\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        console.log(\"Continuos Mode\",this.state.continuousTest,\"PEV \",this.state.pevProtocol, \" --- \",this.state.pevDeviceState,\" EVSE \",this.state.evseProtocol,\" --- \",this.state.evseDeviceState,this.state.evseHpgState,\"timeoutFound \",this.state.timeoutFound)\r\n        \r\n        if(this.state.pevProtocol === \"Chademo\" && this.state.evseProtocol === \"Chademo\"){\r\n            console.log(\"DeviceState | PEV \",this.state.pevDeviceState,\" EVSE \",this.state.evseDeviceState)\r\n            return (\r\n                <div>\r\n                    <h1 className=\"cs\">FoE-Charger</h1>\r\n                        <div className=\"circle cir\"><p className=\"c\">F</p>\r\n                        <div className=\"circle one\"></div>\r\n                        <div className=\"circle two\">\r\n                            <div className=\"circle three\">\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n    \r\n                        <div className=\"wrapper\">\r\n                        <div className=\"bar left\"></div>\r\n                        <div className=\"bar top\"></div>\r\n                        <div className=\"bar right\"></div>\r\n                        <div className=\"bar bottom\"></div>\r\n                        <br/>\r\n                        <Grid container>\r\n                        <Grid item xs={2}>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        {((this.state.pevDeviceState === 0 || this.state.pevDeviceState === 4) && this.state.evseDeviceState === 0) ?<div className='Action_button_1' onClick={this.pevSendStartCommand}/> : null }\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={2} >\r\n                            <div style={{marginTop: '20px'}}>\r\n                                <span className='continuousText'>Continuous Test</span>\r\n                                {\r\n                                    this.state.continuousTest ? \r\n                                        <div style={{marginLeft: '30px'}} className='continuousSelectionSelected' onClick={this.setContinuosState} />: \r\n                                        <div style={{marginLeft: '30px'}} className='continuousSelectionUnselected' onClick={this.setContinuosState} /> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                        </Grid>\r\n                        <Grid item xs={2} >\r\n                            <div className='parentWheel'>\r\n                                <div className='Outer_wheel'/>\r\n                                <div className='Wheel_Base'/>\r\n                                {this.state.started ? <div className='Ineer_wheel Ineer_wheel_Animation'/> : <div className='Ineer_wheel'/>}\r\n                                <div className='Percentage_wheel'><span id='percentage'>{this.state.percentage}</span>%</div>\r\n                            </div>\r\n                        \r\n                        </Grid>\r\n                        </Grid>\r\n                        \r\n                        \r\n                        <Grid container>\r\n                        <Grid item xs={6}>\r\n                            {this.showDetailedProgress()}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        {this.showLinkPanel()}\r\n                        </Grid>\r\n                        </Grid>                \r\n                        \r\n                        </div>\r\n                </div>\r\n                );   \r\n        }else{\r\n            return (\r\n                <div>\r\n                    <h1 className=\"cs\">FoE-Charger</h1>\r\n                        <div className=\"circle cir\"><p className=\"c\">F</p>\r\n                        <div className=\"circle one\"></div>\r\n                        <div className=\"circle two\">\r\n                            <div className=\"circle three\">\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n    \r\n                        <div className=\"wrapper\">\r\n                        <div className=\"bar left\"></div>\r\n                        <div className=\"bar top\"></div>\r\n                        <div className=\"bar right\"></div>\r\n                        <div className=\"bar bottom\"></div>\r\n                        <br/>\r\n                        <br/><br/><br/>\r\n                        <Grid container>\r\n                        <Grid item xs={6}>\r\n                            {this.showDetailedProgress()}\r\n                        </Grid>\r\n                        </Grid>                \r\n                        </div>\r\n                </div>\r\n                );\r\n        }\r\n    }\r\n\r\n/*\r\n<ol className=\"timeline\">\r\n                        <li>list item</li>\r\n                        <li>list item</li>\r\n                    </ol>\r\n*/\r\n\r\n}\r\nexport default ChademoPage","import React, {Component} from \"react\";\r\nimport CCSPage from './components/CCSPage/CCSPage'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Header from \"./components/Header/Header\"\r\nimport Contact from \"./components/Contact/Contact\"\r\nimport About from \"./components/About/About\"\r\nimport './App.css';\r\nimport ChademoPage from \"./components/ChademoPage/ChademoPage\";\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      p1 :\r\n        {id: 1, selected : false, port : {},onClickHandler:this.selectCom1},\r\n      p2 :\r\n        {id: 2, selected : false, port : {},onClickHandler:this.selectCom2},\r\n      supported : false\r\n    };\r\n\r\n    this.selectCom1 = this.selectCom1.bind(this)\r\n    this.selectCom2 = this.selectCom2.bind(this)\r\n  }\r\n  \r\n\r\n  \r\n  \r\n  async componentDidMount(){\r\n    try{\r\n    console.log(\"list of serial ports the website has been granted access to previously\",navigator.serial.getPorts())\r\n\r\n      const portList = await navigator.serial.getPorts()\r\n    \r\n      if(portList.length === 2){\r\n        this.setState(\r\n          {\r\n            p1 : {id: portList[0].id, selected : true, port : portList[0]},\r\n            p2 : {id: portList[1].id, selected : false, port : portList[1]},\r\n            supported : true\r\n          }\r\n        )\r\n      }else if(portList.length === 1){\r\n        this.setState(\r\n          {\r\n            p1 : {id: portList[0].id, selected : true, port : portList[0]},\r\n            p2 : this.state.p2,\r\n            supported : true\r\n          }\r\n        )\r\n      }else{\r\n        this.setState(\r\n          {\r\n            p1 : this.state.p1,\r\n            p2 : this.state.p2,\r\n            supported : true\r\n          }\r\n        )\r\n      }\r\n    }catch(err){\r\n      let bSupport = false;\r\n      if(err.message === \"Cannot read property 'getPorts' of undefined\")\r\n        bSupport = false\r\n      else\r\n        bSupport = true\r\n\r\n      this.setState(\r\n        {\r\n          p1 : this.state.p1,\r\n          p2 : this.state.p2,\r\n          supported : bSupport\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  async AskUserForComport(slotId){\r\n    try {\r\n      \r\n      switch(slotId){\r\n      case 1:\r\n        if(!this.state.p1.selected){\r\n          console.log(\"list of serial ports the website has been granted access to previously\",navigator.serial.getPorts())\r\n          const p1 = await navigator.serial.requestPort()\r\n          console.log(\"AskUserForComport p1\",p1)\r\n          this.setState(\r\n            {\r\n              p1 : {id: this.state.p1.id, selected : true, port : p1},\r\n              p2 : this.state.p2,\r\n              supported : this.state.supported\r\n            }\r\n          )\r\n\r\n        }\r\n        break;\r\n\r\n      case 2:\r\n        if(!this.state.p2.selected){\r\n          const p2 = await navigator.serial.requestPort()\r\n          \r\n          this.setState(\r\n            {\r\n              p1 : this.state.p1,\r\n              p2 : {id: this.state.p2.id, selected : true, port : p2},\r\n              supported : this.state.supported\r\n            }\r\n          )\r\n\r\n        }\r\n        break;\r\n        default:\r\n          console.error(\"Default switch-case\")\r\n          break;\r\n    }\r\n  } catch (err) {\r\n    console.log(\"An error was caught: \", err);\r\n  }\r\n  }\r\n \r\n\r\n  async selectCom1(){\r\n      this.AskUserForComport(1)   \r\n  }\r\n\r\n\r\n  async selectCom2(){\r\n      this.AskUserForComport(2)   \r\n  }\r\n\r\n\r\n  tryToCloseComPort(){\r\n    try{\r\n      if(this.state.p1.selected === true){\r\n        try {\r\n           this.state.p1.port.close();\r\n        } catch (e) {\r\n        }\r\n        \r\n    }\r\n    }catch(err){\r\n      console.error(err)  \r\n    }\r\n  }\r\n\r\n  prepareComPortSelectButtons(){\r\n    console.log(\"Create Message box\")\r\n    if(this.state.supported){\r\n      if(this.state.p1.selected === false)\r\n      return(\r\n        <div className='parentMessageBox'>\r\n            <div className='messageBoxSelectButton' onClick={this.selectCom1} key=\"c1\"/>\r\n        </div>  \r\n        )\r\n      else\r\n        return null;\r\n    }else{\r\n      return(\r\n        <div>\r\n          <div className='warningMessageBox'>\r\n          </div>  \r\n        </div>\r\n        )\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  render(){\r\n    console.log(\"render....\")\r\n  return (\r\n    <div >\r\n      \r\n      <BrowserRouter>\r\n      <Header/>\r\n      <Switch>\r\n        <Route exact path=\"/contact\">\r\n          <Contact />\r\n        </Route>\r\n        <Route exact path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route exact path=\"/chademo\">\r\n        {this.prepareComPortSelectButtons()}\r\n          <Grid container justify='center'>\r\n            <Grid item xs={12}>\r\n              <div>\r\n                {this.state.p1.selected === true ? <ChademoPage port={this.state.p1}/ > : null}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Route>\r\n        <Route exact path=\"/ccs\">\r\n          {this.prepareComPortSelectButtons()}\r\n          <Grid container justify='center'>\r\n            <Grid item xs={12}>\r\n              <div>\r\n                {this.state.p1.selected === true ? <CCSPage port={this.state.p1}/ > : null}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Route>\r\n      </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}